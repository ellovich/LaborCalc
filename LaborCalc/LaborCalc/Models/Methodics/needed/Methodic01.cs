using System.Net.NetworkInformation;
using System.Reflection;

namespace LaborCalc.Models;

public partial class Methodic01 : Methodic
{
    public override double MethodicId => 1;
    public override string MethodicName => "Программирование задач, систем и комплексов";

    protected override double CalcLabor()
    {
        return СтадииПроекта.Sum(x => x.Labor);
    }

    public override string CreateHtmlReport()
    {
        string html = "";

        return html;
    }

    public Methodic01()
    {
        СтадииПроекта = new()
        {
            new ТехническоеЗадание (this),
            new ЭскизныйПроект     (this),
            new ТехническийПроект  (this),
            new РабочийПроект      (this),
            new Внедрение          (this),
        };
    }

    [JsonConstructor]
    public Methodic01(int a = 0) { }


    #region DATA

    TrulyObservableCollection<СтадияПроекта>? СтадииПроекта { get; }

    // Комплекс задач
    public static readonly List<string> s_КомплексыЗадач = new() { "Обучающие программные комплексы", "Системы информационной поддержки", "Управление научно-технической информацией", "Статистические задачи", "Задачи расчетного характера" };
    [ObservableProperty] string комплексЗадач = s_КомплексыЗадач[1];

    // Степень новизны разрабатываемых комплексов задач
    public static readonly List<string> s_СтепеньНовизны = new() { "А", "Б", "В", "Г" };
    [ObservableProperty] string степеньНовизны = s_СтепеньНовизны[0];

    // Группа сложности алгоритма
    public static readonly List<string> s_ГруппаСложностиАлгоритма = new() { "1", "2", "3" };
    [ObservableProperty] string группаСложностиАлгоритма = s_ГруппаСложностиАлгоритма[0];

    public static readonly List<string> s_СтепеньПримененияТиповыхРешений = new() { "до 20%", "20-25%", "25-40%", "40-60%", "60-80%", "80-90%", "90% и выше" };
    [ObservableProperty] string степеньПримененияТиповыхРешений = s_СтепеньПримененияТиповыхРешений[0];



    // Кол-во входных и выходных наборов информации 1.1.6.1 и 1.1.6.2
    public double In_inf_sum => In_inf_pi + In_inf_nsi + In_inf_bd; // количество форм входной информации
    [ObservableProperty] int in_inf_pi;  // количество входной инф-ии переменной формы ПИ
    [ObservableProperty] int in_inf_nsi; // количество входной инф-ии нормативно-справочной формы НСИ
    [ObservableProperty] int in_inf_bd;  // количество входной инф-ии формы банка данных БД
    [ObservableProperty] int out_inf;    // количество форм выходной информации

    // Вид обработки информации 1.1.6.5
    [ObservableProperty] bool is_РВ;  // в режиме реального времени
    [ObservableProperty] bool is_ТОУ; // обеспечение телекоммуникационной обработки данных и управления удаленными объектами
    public static readonly List<string> s_ОбъемВходнойИнформации = new() { "до 50", "до 100", "до 200", "свыше 200" };
    [ObservableProperty] string объемВходнойИнформации = s_ОбъемВходнойИнформации[0];

    // Сложность контроля входной и выходной  информации 1.1.6.6
    public static readonly List<string> s_СложностьКонтроляИнформации = new() { "11", "12", "21", "22" };
    [ObservableProperty] string сложностьКонтроляВходнойИнформации = s_СложностьКонтроляИнформации[0];
    [ObservableProperty] string сложностьКонтроляВыходнойИнформации = s_СложностьКонтроляИнформации[0];


    [ObservableProperty] bool участиеРазработчиковПостановкиЗадачи;
    [ObservableProperty] bool участиеРазработчиковПО;

    public static readonly List<string> s_ЯзыкПрограммирования = new() { "низкого уровня", "высокого уровня" };
    [ObservableProperty] string языкПрограммирования = s_ЯзыкПрограммирования[0];

    [ObservableProperty] bool разработка_мат_обеспечения;

    [ObservableProperty] bool технорабочий_проект;



    #region СТАДИИ ПРОЕКТА

    public abstract partial class СтадияПроекта : ViewModelBase // TODO участие разработчиков ПО в подготовке информационного обеспечения
    {
        protected Methodic01 _m;
        [ObservableProperty] public bool isEnabled = true;

        public double Labor => IsEnabled ? CalcLabor() : 0;
        protected double CalcLabor()
        {
            return (CalcTaskLabor() + CalcSoftLabor()) * CalcK(); // трудоёмкость

        }
        protected abstract double CalcTaskLabor(); // трудоёмкость разработчиков задачи
        protected abstract double CalcSoftLabor(); // трудоёмкость разработчиков ПО
        protected abstract double CalcK();


        public СтадияПроекта(Methodic01 methodic01)
        {
            _m = methodic01;
        }


        private double ConvertToHours(double days)
        {
            return 0;
        }
    }

    public partial class ТехническоеЗадание : СтадияПроекта
    {
        public ТехническоеЗадание(Methodic01 methodic01) : base(methodic01) { }

        protected override double CalcTaskLabor()
        {
            double labor = s_T_1_9[_m.КомплексЗадач, _m.СтепеньНовизны];
            return 0.65 * labor;
        }

        protected override double CalcSoftLabor()
        {
            double labor = s_T_1_9[_m.КомплексЗадач, _m.СтепеньНовизны];
            return 0.35 * labor;
        }

        protected override double CalcK()
        {
            return 1;
        }


        #region TABLES

        private static Methodic01Table s_T_1_9 = new(9, "Норма времени на группу задач (задачу), чел.-дней",
            // Комплекс задач (задачи) подсистем
            rowsNames: new string[] { "Обучающие программные комплексы", "Системы информационной поддержки", "Управление научно-технической информацией", "Статистические задачи", "Задачи расчетного характера" },
            // Номер нормы
            rowsNamesDown: new string[] { "11", "22", "33", "44", "55" },
            // Степень новизны (индекс нормы)
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            columnsNamesDown: new string[] { },
            values: new double[,] {
            { 131, 113, 63, 39},
            { 129, 111, 61, 38},
            {  91,  66, 43, 26},
            { 105,  76, 42, 30},
            {  92,  69, 47, 29},
            }
        );

        #endregion TABLES
    }

    public partial class ЭскизныйПроект : СтадияПроекта
    {
        public ЭскизныйПроект(Methodic01 methodic01) : base(methodic01) { }
 
        protected override double CalcTaskLabor()
        {
            double labor = s_T_1_10[_m.КомплексЗадач, _m.СтепеньНовизны];
            return 0.7 * labor;
        }

        protected override double CalcSoftLabor()
        {
            double labor = s_T_1_10[_m.КомплексЗадач, _m.СтепеньНовизны];
            return 0.3 * labor;
        }

        protected override double CalcK()
        {
            return 1;
        }


        #region TABLES

        private static Methodic01Table s_T_1_10 = new(10, "Норма времени на группу задач (задачу), чел.-дней",
            // Комплекс задач (задачи) подсистем
            rowsNames: new string[] { "Обучающие программные комплексы", "Системы информационной поддержки", "Управление научно-технической информацией", "Статистические задачи", "Задачи расчетного характера" },
            // Номер нормы
            rowsNamesDown: new string[] { "11", "22", "33", "44", "55" },
            // Степень новизны (индекс нормы)
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            columnsNamesDown: new string[] { },
            values: new double[,] {
            { 175, 117, 77, 53 },
            { 170, 100, 70, 45 },
            { 151, 101, 67, 46 },
            { 148, 108, 72, 49 },
            { 155,  94, 67, 41 },
            }
        );

        #endregion TABLES
    }

    public partial class ТехническийПроект : СтадияПроекта
    {
        public ТехническийПроект(Methodic01 methodic01) : base(methodic01) { }

        double _K_ПИ => s_T_1_1["Переменная (ПИ)", _m.СтепеньНовизны];
        double _K_НСИ => s_T_1_1["Нормативно-справочная (НСИ)", _m.СтепеньНовизны];
        double _K_БД => s_T_1_1["Банк данных (БД)", _m.СтепеньНовизны];
        double _K_п => (_K_ПИ * _m.In_inf_pi + _K_НСИ * _m.In_inf_nsi + _K_БД * _m.In_inf_bd) / (_m.In_inf_pi + _m.In_inf_nsi + _m.In_inf_bd);

        protected override double CalcTaskLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_11[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 34.09 * Math.Pow(_m.In_inf_sum, 0.41) * Math.Pow(_m.Out_inf, 0.31);
        }

        protected override double CalcSoftLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_12[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 12.09 * Math.Pow(_m.In_inf_sum, 0.57) * Math.Pow(_m.Out_inf, 0.31);
        }

        protected override double CalcK()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return _K_п * _К_ови * _К_ски * _К_вои * _К_ур * _К_пву * _К_т * _К_смо;
            else
                return _К_т;
        }


        #region TABLES

        private static Methodic01Table s_T_1_1 = new(1, "Поправочные коэффициенты для определения трудоемкости работ на стадии «Технический проект»",
            // Вид используемой информации (п. 1.1.6.5)
            rowsNames: new string[] { "Переменная (ПИ)", "Нормативно-справочная (НСИ)", "Банк данных (БД)" },
            // Степень новизны (п. 1.1.6.3)
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            values: new double[,] {
            { 1.70, 1.20, 1.00, 0.50 },
            { 1.45, 1.08, 0.72, 0.43 },
            { 4.37, 3.12, 2.08, 1.25 },
            }
        );

        private static Methodic01Table s_T_1_11 = new(11, "Работы, выполняемые разработчиками постановки задачи",
           // Количество разновидностей форм входной информации
           rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
           // Количество разновидностей форм выходной информации
           columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
           values: new double[,] {
           {  34,  43,  51,  58,  66,  74,  84,  94, 105 },
           {  46,  57,  67,  78,  87,  99, 112, 126, 139 },
           {  54,  67,  80,  92, 103, 117, 132, 148, 165 },
           {  61,  75,  89, 103, 116, 131, 149, 167, 185 },
           {  66,  83,  98, 113, 127, 144, 163, 183, 203 },
           {  72,  89, 106, 122, 137, 155, 176, 197, 219 },
           {  76,  95, 113, 130, 146, 165, 187, 210, 233 },
           {  81, 100, 119, 137, 154, 175, 198, 222, 246 },
           {  85, 105, 125, 143, 162, 183, 207, 233, 258 },
           {  88, 110, 130, 150, 169, 191, 216, 243, 270 },
           {  92, 114, 135, 156, 175, 199, 225, 252, 280 },
           {  95, 118, 141, 162, 182, 206, 233, 262, 291 },
           {  98, 122, 145, 167, 188, 213, 241, 270, 301 },
           { 102, 126, 150, 172, 194, 219, 249, 279, 310 },
           { 104, 129, 154, 177, 199, 226, 256, 287, 318 },
           { 107, 133, 158, 182, 204, 232, 262, 294, 327 },
           { 110, 136, 162, 187, 210, 238, 269, 302, 336 },
           { 112, 140, 166, 191, 215, 243, 276, 309, 344 },
           { 115, 143, 170, 195, 220, 249, 282, 316, 351 },
           { 117, 145, 173, 199, 224, 254, 288, 323, 358 }
           }
        );

        private static Methodic01Table s_T_1_12 = new(12, "Работы, выполняемые разработчиками программного обеспечения",
            // Количество разновидностей форм входной информации
            rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
            // Количество разновидностей форм выходной информации
            columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
            values: new double[,] {
            { 12 , 13 , 14 , 16 , 17 , 18 , 20 , 21 , 22  },
            { 18 , 21 , 22 , 24 , 25 , 27 , 29 , 31 , 33  },
            { 23 , 26 , 28 , 30 , 32 , 34 , 36 , 39 , 41  },
            { 27 , 29 , 33 , 36 , 38 , 40 , 43 , 45 , 48  },
            { 31 , 34 , 37 , 40 , 43 , 45 , 49 , 51 , 54  },
            { 33 , 37 , 41 , 44 , 47 , 50 , 54 , 57 , 60  },
            { 37 , 41 , 44 , 47 , 51 , 55 , 58 , 62 , 65  },
            { 39 , 44 , 48 , 52 , 55 , 58 , 62 , 67 , 70  },
            { 42 , 47 , 52 , 56 , 59 , 62 , 67 , 71 , 75  },
            { 44 , 49 , 54 , 58 , 62 , 67 , 71 , 76 , 80  },
            { 47 , 53 , 58 , 62 , 66 , 70 , 74 , 80 , 84  },
            { 49 , 55 , 60 , 65 , 69 , 73 , 79 , 84 , 89  },
            { 52 , 58 , 63 , 68 , 73 , 77 , 83 , 87 , 92  },
            { 53 , 60 , 66 , 71 , 75 , 80 , 85 , 91 , 96  },
            { 56 , 63 , 69 , 73 , 78 , 83 , 89 , 95 , 100 },
            { 58 , 65 , 71 , 76 , 81 , 87 , 93 , 98 , 103 },
            { 59 , 67 , 73 , 79 , 84 , 89 , 96 , 102, 107 },
            { 62 , 69 , 76 , 82 , 87 , 93 , 99 , 105, 111 },
            { 64 , 71 , 79 , 84 , 89 , 95 , 102, 108, 114 },
            { 66 , 73 , 80 , 87 , 91 , 98 , 110, 112, 118 },
            }
        );

        private static Methodic01Table s_T_1_13 = new(13, "Работы, выполняемые разработчиками постановки задачи",
            // Группа сложности алгоритма
            rowsNames: new string[] { "1", "2", "3" },
            // Степень новизны
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            values: new double[,] {
            {119, 89, 57, 36 },
            { 40, 30, 21, 13 },
            { 32, 23, 14,  9 },
            }
        );

        private static Methodic01Table s_T_1_14 = new(14, "Работы, выполняемые разработчиками программного обеспечения",
            // Группа сложности алгоритма
            rowsNames: new string[] { "1", "2", "3" },
            // Степень новизны
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            values: new double[,] {
            { 90, 64, 43, 27 },
            { 36, 27, 19, 12 },
            { 27, 19, 12, 8  }
            }
        );

        #endregion TABLES
    }

    public partial class РабочийПроект : СтадияПроекта
    {
        public РабочийПроект(Methodic01 methodic01) : base(methodic01) { }

        double _K_ПИ => s_T_1_2["Переменная (ПИ)", _m.ГруппаСложностиАлгоритма, _m.СтепеньНовизны];
        double _K_НСИ => s_T_1_2["Нормативно-справочная (НСИ)", _m.СтепеньНовизны];
        double _K_БД => s_T_1_2["Банк данных (БД)", _m.СтепеньНовизны];
        double _K_П => (_K_ПИ * _m.In_inf_pi + _K_НСИ * _m.In_inf_nsi + _K_БД * _m.In_inf_bd) / (_m.In_inf_pi + _m.In_inf_nsi + _m.In_inf_bd);

        protected override double CalcTaskLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_15[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 13.09 * Math.Pow(_m.In_inf_sum, 0.41) * Math.Pow(_m.Out_inf, 0.44);
        }

        protected override double CalcSoftLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_16[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 72.3 * Math.Pow(_m.In_inf_sum, 0.38) * Math.Pow(_m.Out_inf, 0.39);
        }

        protected override double CalcK()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return _K_п * _К_ови * _К_ски * _К_вои * _К_ур * _К_пву * _К_т * _К_смо;
            else
                return _К_т;
        }


        #region TABLES

        private static Methodic01Table s_T_1_15 = new(15, "Работы, выполняемые разработчиками постановки задачи",
           // Количество разновидностей форм входной информации
           rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
           // Количество разновидностей форм выходной информации
           columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
           values: new double[,] {
           { 13, 18, 24, 28,  33,  40,  48,  56,  66 },
           { 18, 24, 31, 38,  45,  53,  64,  75,  88 },
           { 21, 28, 36, 45,  53,  64,  75,  89, 105 },
           { 24, 32, 41, 49,  59,  71,  85, 101, 118 },
           { 26, 35, 45, 55,  65,  78,  93, 111, 128 },
           { 27, 38, 48, 59,  69,  83, 101, 119, 139 },
           { 29, 40, 52, 62,  74,  89, 107, 127, 147 },
           { 31, 42, 54, 66,  79,  94, 113, 134, 155 },
           { 33, 45, 56, 69,  82,  99, 119, 140, 164 },
           { 34, 46, 59, 73,  86, 104, 125, 147, 171 },
           { 35, 48, 61, 75,  89, 107, 129, 152, 178 },
           { 36, 49, 64, 79,  93, 112, 134, 158, 184 },
           { 38, 52, 66, 81,  96, 115, 139, 164, 189 },
           { 39, 53, 68, 84,  99, 119, 142, 168, 195 },
           { 40, 54, 71, 86, 101, 122, 147, 173, 201 },
           { 41, 56, 72, 88, 105, 126, 151, 178, 207 },
           { 42, 58, 74, 91, 107, 128, 154, 182, 212 },
           { 44, 59, 75, 93, 109, 132, 158, 186, 216 },
           { 45, 60, 78, 95, 112, 134, 161, 191, 222 },
           { 46, 61, 79, 96, 114, 138, 165, 194, 227 }
           }
        );

        private static Methodic01Table s_T_1_16 = new(16, "Работы, выполняемые разработчиками программного обеспечения",
            // Количество разновидностей форм входной информации
            rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
            // Количество разновидностей форм выходной информации
            columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
            values: new double[,] {
            {  72,  95, 118, 140, 162, 188, 219, 253, 288 },
            {  95, 124, 154, 183, 210, 245, 285, 328, 375 },
            { 111, 145, 179, 213, 245, 285, 333, 383, 436 },
            { 124, 161, 200, 237, 273, 320, 372, 428, 487 },
            { 135, 176, 218, 258, 298, 347, 405, 466, 530 },
            { 145, 188, 233, 277, 320, 372, 433, 500, 568 },
            { 154, 199, 247, 294, 338, 395, 461, 530, 602 },
            { 161, 210, 261, 308, 356, 415, 485, 557, 634 },
            { 169, 219, 272, 323, 372, 433, 506, 582, 663 },
            { 176, 229, 283, 336, 387, 452, 527, 606, 689 },
            { 183, 237, 294, 348, 402, 468, 546, 629, 716 },
            { 188, 246, 304, 360, 415, 485, 565, 651, 739 },
            { 194, 253, 314, 371, 428, 500, 583, 670, 762 },
            { 199, 261, 322, 382, 440, 514, 599, 689, 785 },
            { 206, 267, 331, 392, 452, 527, 615, 707, 805 },
            { 210, 273, 338, 402, 464, 540, 631, 726, 824 },
            { 216, 279, 346, 411, 474, 553, 645, 742, 844 },
            { 219, 285, 353, 419, 485, 565, 659, 758, 862 },
            { 224, 292, 361, 429, 495, 576, 673, 775, 881 },
            { 229, 298, 369, 437, 504, 589, 687, 789, 897 },
            }
        );

        private static Methodic01Table s_T_1_17 = new(17, "Работы, выполняемые разработчиками постановки задачи",
            // Затраты времени на разработку технического проекта, чел.-дни
            rowsNames: new string[] { " 9", "13", "14", "21", "23", "30", "32", "36", "40", "57", "89", "119" },
            // Группа сложности
            columnsNames: new string[] { "1", "2", "3" },
            values: new double[,] {
            {   9,   7, 5  },
            {  14,  10, 7  },
            {  16,  12, 8  },
            {  22,  16, 12 },
            {  25,  18, 13 },
            {  32,  24, 16 },
            {  36,  28, 18 },
            {  43,  32, 22 },
            {  48,  35, 24 },
            {  69,  46, 35 },
            { 107,  81, 53 },
            { 138, 105, 71 }
            }
        );

        private static Methodic01Table s_T_1_18 = new(18, "Работы, выполняемые разработчиками программного обеспечения",
            // Затраты времени на разработку технического проекта, чел.-дни
            rowsNames: new string[] { "8", "12", "19", "27", "36", "43", "64", "90" },
            // Группа сложности
            columnsNames: new string[] { "1", "2", "3" },
            values: new double[,] {
            {  76,  42,  27 },
            { 100,  76,  42 },
            { 179, 100,  76 },
            { 221, 179, 100 },
            { 336, 221, 179 },
            { 485, 336, 221 },
            { 683, 485, 336 },
            { 979, 683, 485 }
            }
        );

        // К_ПИ, К_НСИ, К_БД для Рабочего проекта
        private static Methodic01Table s_T_1_2 = new(2, "Поправочные коэффициенты для определения трудоемкости работ на стадии «Рабочий проект»",
            // Вид используемой информации (п. 1.1.6.5)
            rowsNames: new string[] { "ПИ", "ПИ", "ПИ", "НСИ", "НСИ", "НСИ", "БД", "БД", "БД" },
            // Группа сложности алгоритма
            rowsNamesDown: new string[] { "1", "2", "3", "1", "2", "3", "1", "2", "3" },
            // Степень новизны (п. 1.1.6.3)
            columnsNames: new string[] { "А", "Б", "В", "Г" },
            columnsNamesDown: new string[] { },
            values: new double[,] {
            { 2.27, 1.62, 1.20, 0.65 },
            { 2.02, 1.44, 1.10, 0.58 },
            { 1.68, 1.20, 1.00, 0.48 },
            { 1.36, 0.97, 0.65, 0.40 },
            { 1.21, 0.86, 0.58, 0.34 },
            { 1.01, 0.72, 0.48, 0.29 },
            { 1.14, 0.81, 0.54, 0.32 },
            { 1.05, 0.72, 0.48, 0.29 },
            { 0.85, 0.60, 0.40, 0.24 }

            }
        );

        #endregion TABLES
    }

    public partial class Внедрение : СтадияПроекта
    {
        public Внедрение(Methodic01 methodic01) : base(methodic01) { }

        protected override double CalcTaskLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_19[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 9.16 * Math.Pow(_m.In_inf_sum, 0.43) * Math.Pow(_m.Out_inf, 0.33);
        }

        protected override double CalcSoftLabor()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return s_T_1_20[_m.In_inf_sum.ToString(), Methodic01Table.GetColumnName(_m.Out_inf)];
            else
                return 7.12 * Math.Pow(_m.In_inf_sum, 0.43) * Math.Pow(_m.Out_inf, 0.43);
        }

        protected override double CalcK()
        {
            if (_m.In_inf_sum <= 20 && _m.Out_inf <= 42)
                return _K_п * _К_ови * _К_ски * _К_вои * _К_ур * _К_пву * _К_т * _К_смо;
            else
                return _К_т;
        }


        #region TABLES

        private static Methodic01Table s_T_1_19 = new(19, "Работы, выполняемые разработчиками постановки задачи",
           // Количество разновидностей форм входной информации
           rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
           // Количество разновидностей форм выходной информации
           columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
           values: new double[,] {
            {  9 , 11,  16,  19,  21,  26,  30 , 36 , 41  },
            { 10,  16,  20,  24,  29,  34,  41 , 49 , 56  },
            { 11,  20,  24,  30,  36,  41,  50 , 57 , 66  },
            { 13,  23,  29,  34,  40,  47,  56 , 66 , 76  },
            { 14,  24,  30,  37,  44,  53,  61 , 73 , 83  },
            { 16,  26,  33,  40,  47,  56,  67 , 79 , 90  },
            { 17,  27,  36,  43,  51,  60,  72 , 84 , 97  },
            { 19,  29,  39,  46,  54,  64,  76 , 89 , 103 },
            { 20,  30,  40,  49,  57,  67,  80 , 93 , 107 },
            { 21,  31,  43,  51,  60,  71,  84 , 97 , 113 },
            { 23,  33,  44,  54,  63,  74,  87 , 101, 117 },
            { 24,  34,  46,  56,  66,  77,  92 , 106, 123 },
            { 26,  36,  47,  57,  69,  80,  94 , 110, 127 },
            { 27,  37,  49,  59,  70,  82,  97 , 114, 132 },
            { 29,  39,  50,  61,  73,  84,  100, 117, 134 },
            { 30,  40,  51,  63,  74,  87,  103, 120, 139 },
            { 31,  41,  53,  64,  76,  90,  106, 123, 143 },
            { 33,  43,  54,  66,  77,  93,  109, 126, 146 },
            { 34,  44,  56,  67,  79,  94,  112, 130, 150 },
            { 36,  46,  57,  69,  80,  96,  114, 133, 153 },
           }
        );

        private static Methodic01Table s_T_1_20 = new(20, "Работы, выполняемые разработчиками программного обеспечения",
            // Количество разновидностей форм входной информации
            rowsNames: new string[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
            // Количество разновидностей форм выходной информации
            columnsNames: new string[] { "1", "2", "3-4", "5-6", "7-9", "10-14", "15-21", "22-30", "31-42" },
            values: new double[,] {
            {  7, 10, 12, 15, 18, 21, 25,  29,  34 },
            {  8, 13, 16, 20, 23, 28, 33,  39,  45 },
            {  9, 15, 19, 24, 28, 33, 39,  46,  53 },
            { 10, 17, 22, 27, 31, 37, 44,  52,  60 },
            { 11, 19, 24, 29, 34, 41, 49,  57,  66 },
            { 12, 20, 26, 32, 37, 44, 53,  62,  71 },
            { 13, 21, 28, 34, 39, 47, 56,  66,  76 },
            { 14, 22, 29, 36, 41, 50, 60,  70,  81 },
            { 15, 23, 31, 38, 43, 52, 62,  73,  85 },
            { 16, 24, 32, 39, 45, 55, 65,  77,  89 },
            { 17, 25, 34, 41, 47, 57, 68,  80,  92 },
            { 18, 26, 35, 42, 49, 59, 71,  83,  96 },
            { 19, 27, 36, 44, 51, 61, 73,  85,  99 },
            { 20, 28, 37, 45, 53, 63, 75,  88, 102 },
            { 21, 29, 38, 47, 55, 65, 78,  91, 105 },
            { 22, 30, 39, 48, 57, 67, 80,  93, 108 },
            { 23, 31, 40, 49, 59, 69, 82,  96, 111 },
            { 24, 32, 41, 50, 60, 70, 84,  98, 113 },
            { 25, 33, 42, 51, 61, 72, 86, 100, 116 },
            { 26, 34, 43, 52, 62, 73, 87, 102, 118 }
            }
        );

        double f_T_1_21 => 21.06 * Math.Pow(f1, 0.42) * Math.Pow(f2, 0.56);
        private static Methodic01Table s_T_1_21 = new(21, "Расчет трудоемкости постановки задачи",
            // Постановки задачи программного обеспечения
            rowsNames: new string[] { "Постановки задачи программного обеспечения", "Постановки задачи программного обеспечения" },
            // Группа сложности
            columnsNames: new string[] { "1", "2", "3" },
            values: new double[,] {
            {  33,  25,  8  },
            {  98,  73, 24  }
            }
        );

        #endregion
    }


    #endregion СТАДИИ ПРОЕКТА


    #region TABLES

    private static Methodic01Table s_T_1_3 = new(3, "Поправочные коэффициенты для определения трудоемкости работ на стадиях «Технический проект», «Рабочий проект», «Внедрение»",
        // Стадия разработки проекта
        rowsNames: new string[] { "Технический проект", "Рабочий проект", "Внедрение" },
        // Объем входной информации (включая верхнюю границу), тыс.документострок
        columnsNames: new string[] { "до 50", "до 100", "до 200", "свыше 200" },
        values: new double[,] {
            { 1.0, 1.05, 1.10, 1.2 },
            { 1.0, 1.10, 1.20, 1.3 },
            { 1.0, 1.15, 1.25, 1.4 }
        }
    );


    private static Methodic01Table s_T_1_4 = new(4, "Поправочные коэффициенты, учитывающие сложность контроля информации",
        // Сложность контроля входной информации
        rowsNames: new string[] { "11", "12" },
        // Сложность контроля выходной информации
        columnsNames: new string[] { "21", "22" },
        values: new double[,] {
            { 1.16, 1.07 },
            { 1.08, 1.00 }
        }
    );


    private static Methodic01Table s_T_1_5 = new(5, "Поправочные коэффициенты, учитывающие вид обработки информации",
    // Стадия разработки проекта
        rowsNames: new string[] { "Технический проект", "Технический проект", "Рабочий проект", "Рабочий проект", "Внедрение", "Внедрение" },
        rowsNamesDown: new string[] { "РВ", "ТОУ", "РВ", "ТОУ", "РВ", "ТОУ" },
        // Сложность контроля выходной информации
        columnsNames: new string[] { "А", "Б", "В", "Г" },
        columnsNamesDown: new string[] { },
        values: new double[,] {
            { 1.67, 1.45, 1.26, 1.10 },
            { 1.75, 1.52, 1.36, 1.15 },
            { 1.75, 1.52, 1.32, 1.15 },
            { 1.92, 1.67, 1.44, 1.25 },
            { 1.60, 1.39, 1.21, 1.05 },
            { 1.67, 1.45, 1.26, 1.10 },
        }
    );


    private static List<Correction> s_Corrections_t_1_6 = new()
    {
        new Correction("90% и выше", 0.1),
        new Correction("80-90%", 0.3),
        new Correction("60-80%", 0.5),
        new Correction("40-60%", 0.6),
        new Correction("25-40%", 0.7),
        new Correction("20-25%", 0.8),
    };
    [ObservableProperty] Correction k_т = s_Corrections_t_1_6[0];


    #endregion TABLES


    #endregion DATA
}
